
--------------------------------------------------------------
-- Database creation Script

-- Auto-Generated by QSEE-SuperLite (c) 2001-2004 QSEE-Technologies Ltd.

-- Verbose generation: ON

-- note: spaces within table/column names have been replaced by underscores (_)

-- Target DB: SQL2

-- Entity Model :Entity Relationship Diagram

-- To drop the tables generated by this script run -
--   'D:\British\Oracle\assignment\Assignment\Assignement stuff\task_2\SQL_drop.sql'

--------------------------------------------------------------



--------------------------------------------------------------
-- Table Creation --

-- Each entity on the model is represented by a table that needs to be created within the Database.
-- Within SQL new tables are created using the CREATE TABLE command.
-- When a table is created its name and its attributes are defined.
-- The values of which are derived from those specified on the model.
-- Certain constraints are sometimes also specified, such as identification of primary keys.

-- Create a Database table to represent the "factTable" entity.
CREATE TABLE factTable(
	facttable_id	INTEGER NOT NULL,
	product_id	INTEGER,
	agent_id	INTEGER,
	order_id	INTEGER,
	customer_id	INTEGER,
	branch_id	INTEGER,
	country_id	INTEGER,
	time_id	INTEGER,
	total_order	NUMERIC(10,2),
	-- Specify the PRIMARY KEY constraint for table "factTable".
	-- This indicates which attribute(s) uniquely identify each row of data.
	CONSTRAINT	pk_factTable PRIMARY KEY (facttable_id)
);

-- Create a Database table to represent the "Customer_Dim" entity.
CREATE TABLE Customer_Dim(
	customer_id	INTEGER NOT NULL,
	first_name	VARCHAR(100),
	sur_name	VARCHAR(100),
	address	VARCHAR(100),
	city	VARCHAR(100),
	email	VARCHAR(50),
	-- Specify the PRIMARY KEY constraint for table "Customer_Dim".
	-- This indicates which attribute(s) uniquely identify each row of data.
	CONSTRAINT	pk_Customer_Dim PRIMARY KEY (customer_id)
);

-- Create a Database table to represent the "Product_Dim" entity.
CREATE TABLE Product_Dim(
	product_id	INTEGER NOT NULL,
	name	VARCHAR(100),
	description	VARCHAR(100),
	price	NUMERIC(10,2),
	-- Specify the PRIMARY KEY constraint for table "Product_Dim".
	-- This indicates which attribute(s) uniquely identify each row of data.
	CONSTRAINT	pk_Product_Dim PRIMARY KEY (product_id)
);

-- Create a Database table to represent the "Time_Dim" entity.
CREATE TABLE Time_Dim(
	time_id	INTEGER NOT NULL,
	year	INTEGER,
	month	INTEGER,
	day	INTEGER,
	-- Specify the PRIMARY KEY constraint for table "Time_Dim".
	-- This indicates which attribute(s) uniquely identify each row of data.
	CONSTRAINT	pk_Time_Dim PRIMARY KEY (time_id)
);

-- Create a Database table to represent the "Agent_Dim" entity.
CREATE TABLE Agent_Dim(
	agent_id	INTEGER NOT NULL,
	name	VARCHAR(100),
	phone	NUMERIC(10,2),
	-- Specify the PRIMARY KEY constraint for table "Agent_Dim".
	-- This indicates which attribute(s) uniquely identify each row of data.
	CONSTRAINT	pk_Agent_Dim PRIMARY KEY (agent_id)
);

-- Create a Database table to represent the "Order_Dim" entity.
CREATE TABLE Order_Dim(
	order_id	INTEGER NOT NULL,
	the_date	NUMERIC(8,2),
	notes	VARCHAR(100),
	quantity	INTEGER,
	total	NUMERIC(8,2),
	-- Specify the PRIMARY KEY constraint for table "Order_Dim".
	-- This indicates which attribute(s) uniquely identify each row of data.
	CONSTRAINT	pk_Order_Dim PRIMARY KEY (order_id)
);

-- Create a Database table to represent the "Branch_Dim" entity.
CREATE TABLE Branch_Dim(
	branch_id	INTEGER NOT NULL,
	branch_name	VARCHAR(100),
	location	VARCHAR(100),
	-- Specify the PRIMARY KEY constraint for table "Branch_Dim".
	-- This indicates which attribute(s) uniquely identify each row of data.
	CONSTRAINT	pk_Branch_Dim PRIMARY KEY (branch_id)
);

-- Create a Database table to represent the "Country_Dim" entity.
CREATE TABLE Country_Dim(
	country_id	INTEGER NOT NULL,
	country_name	VARCHAR(100),
	-- Specify the PRIMARY KEY constraint for table "Country_Dim".
	-- This indicates which attribute(s) uniquely identify each row of data.
	CONSTRAINT	pk_Country_Dim PRIMARY KEY (country_id)
);


--------------------------------------------------------------
-- Alter Tables to add fk constraints --

-- Now all the tables have been created the ALTER TABLE command is used to define some additional
-- constraints.  These typically constrain values of foreign keys to be associated in some way
-- with the primary keys of related tables.  Foreign key constraints can actually be specified
-- when each table is created, but doing so can lead to dependency problems within the script
-- i.e. tables may be referenced before they have been created.  This method is therefore safer.

-- Alter table to add new constraints required to implement the "factTable_Product_Dim" relationship

-- This constraint ensures that the foreign key of table "factTable"
-- correctly references the primary key of table "Product_Dim"

ALTER TABLE factTable ADD CONSTRAINT fk1_factTable_to_Product_Dim FOREIGN KEY(product_id) REFERENCES Product_Dim(product_id) ON DELETE CASCADE;

-- Alter table to add new constraints required to implement the "factTable_Customer_Dim" relationship

-- This constraint ensures that the foreign key of table "factTable"
-- correctly references the primary key of table "Customer_Dim"

ALTER TABLE factTable ADD CONSTRAINT fk2_factTable_to_Customer_Dim FOREIGN KEY(ustomer_id) REFERENCES Customer_Dim(customer_id) ON DELETE CASCADE;

-- Alter table to add new constraints required to implement the "factTable_Time_Dim" relationship

-- This constraint ensures that the foreign key of table "factTable"
-- correctly references the primary key of table "Time_Dim"

ALTER TABLE factTable ADD CONSTRAINT fk3_factTable_to_Time_Dim FOREIGN KEY(time_id) REFERENCES Time_Dim(time_id) ON DELETE CASCADE;

-- Alter table to add new constraints required to implement the "factTable_Agent_Dim" relationship

-- This constraint ensures that the foreign key of table "factTable"
-- correctly references the primary key of table "Agent_Dim"

ALTER TABLE factTable ADD CONSTRAINT fk4_factTable_to_Agent_Dim FOREIGN KEY(agent_id) REFERENCES Agent_Dim(agent_id) ON DELETE CASCADE;

-- Alter table to add new constraints required to implement the "factTable_Order_Dim" relationship

-- This constraint ensures that the foreign key of table "factTable"
-- correctly references the primary key of table "Order_Dim"

ALTER TABLE factTable ADD CONSTRAINT fk5_factTable_to_Order_Dim FOREIGN KEY(order_id) REFERENCES Order_Dim(order_id) ON DELETE CASCADE;

-- Alter table to add new constraints required to implement the "factTable_Branch_Dim" relationship

-- This constraint ensures that the foreign key of table "factTable"
-- correctly references the primary key of table "Branch_Dim"

ALTER TABLE factTable ADD CONSTRAINT fk6_factTable_to_Branch_Dim FOREIGN KEY(branch_id) REFERENCES Branch_Dim(branch_id) ON DELETE CASCADE;

-- Alter table to add new constraints required to implement the "factTable_Country_Dim" relationship

-- This constraint ensures that the foreign key of table "factTable"
-- correctly references the primary key of table "Country_Dim"

ALTER TABLE factTable ADD CONSTRAINT fk7_factTable_to_Country_Dim FOREIGN KEY(country_id) REFERENCES Country_Dim(country_id) ON DELETE CASCADE;


--------------------------------------------------------------
-- End of DDL file auto-generation
--------------------------------------------------------------
